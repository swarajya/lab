<!DOCTYPE html>
<html>
  <head>
    <script src="https://aframe.io/releases/1.2.0/aframe.min.js"></script>
    <script src="https://unpkg.com/aframe-event-set-component@3.0.3/dist/aframe-event-set-component.min.js"></script>
    <script src="https://vjs.zencdn.net/7.19.2/video.min.js"></script>
  </head>


  <body>

    <a-scene>
        <a-assets>
          <a-asset-item id="tree" src="MI.glb"></a-asset-item>

          <video id="hls" preload="auto"  controls crossOrigin="anonymous" >

            <source src="https://test-streams.mux.dev/x36xhzz/x36xhzz.m3u8" type="application/x-mpegURL">
          </video>

          <video id="hls2" preload="auto"   width="160" height="90"   controls="true" crossOrigin="anonymous" muted>
            <source src="https://multiplatform-f.akamaihd.net/i/multi/april11/sintel/sintel-hd_,512x288_450_b,640x360_700_b,768x432_1000_b,1024x576_1400_m,.mp4.csmil/master.m3u8" type="application/x-mpegURL">
          </video>

          <video id="vid" preload="auto"  src="mov_bbb.mp4" width="160" height="90"   controls="true" crossOrigin="anonymous" muted></video>
        </a-assets>
      
        <a-entity gltf-model="#tree" position="0.5 0.7 -1.5" modify-materials ></a-entity>
        <!-- <a-entity gltf-model="#tree" position="3 0.9 -1.5"  ></a-entity> -->
        
        <!-- <a-camera position="0 1.0 0"><a-cursor></a-cursor></a-camera> -->
      </a-scene>
  
<script>


let sceneEl = document.querySelector('a-scene');

var textureLoader = new THREE.TextureLoader();
var texture = textureLoader.load( 'code.png' );
texture.flipY = false;
//sceneEl.add( model );


AFRAME.registerComponent('modify-materials', {
    init: function () {

      var scene = this.el.sceneEl.object3D;
      //scene.scale.set(0.5, 0,5, 0.5);

      var textureLoader = new THREE.TextureLoader();
      var texture = textureLoader.load( 'code.png' );
      texture.flipY = false;


      // Wait for model to load.
      this.el.addEventListener('model-loaded', () => {
        // Grab the mesh / scene.
                
        const obj = this.el.getObject3D('mesh');
        // Go over the submeshes and modify materials we want.
        obj.traverse(node => {
         // console.log(node);

          //if (node.name.indexOf('Plane') !== -1) {
            if (node.name == 'Plane002') {
              var newMaterial = new THREE.MeshStandardMaterial({color: 0xff0000});
              node.material = newMaterial;

              const video = document.getElementById("hls");
              //video.onloadeddata = function () {
              //video.play();
              var player = videojs('hls');
                  player.play();
                  player.controls(true);
                  document.body.onkeyup = function(e) {
                    if (e.keyCode == 32 ) {
                      player.pause();
                    }

                    if (e.keyCode == 65) {
                      player.play();
                    }

                  }
//};

            //Create your video texture:
            const videoTexture = new THREE.VideoTexture(video);
            videoTexture.needsUpdate = true;
            const videoMaterial = new THREE.MeshBasicMaterial({
                map: videoTexture,
                side: THREE.FrontSide,
                toneMapped: false,
                color: 'yellow'
            });
            videoMaterial.needsUpdate = true;
            videoMaterial.map.flipY = false;

            //Create screen
            //const screen = new THREE.PlaneGeometry(10, 10);
            //const videoScreen = new THREE.Mesh(screen, videoMaterial);
            node.material = videoMaterial;
            //scene.add(videoScreen);
            //node.object3D.visible = true;
        }
           
         // }
        });
      });
    }
  });


  
</script>

    
  </body>
</html>
